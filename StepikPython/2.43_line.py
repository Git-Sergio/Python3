# Узнав, что ДНК не является случайной строкой, только что поступившие в 
# Институт биоинформатики студенты группы информатиков предложили использовать
#  алгоритм сжатия, который сжимает повторяющиеся символы в строке.

# Кодирование осуществляется следующим образом:
# s = 'aaaabbсaa' преобразуется в 'a4b2с1a2', то есть группы одинаковых символов 
# исходной строки заменяются на этот символ и количество его повторений в этой 
# позиции строки.

# Напишите программу, которая считывает строку, кодирует её предложенным алгоритмом
# и выводит закодированную последовательность на стандартный вывод. 
# Кодирование должно учитывать регистр символов.






s=input()+'1'      # помним о последнем символе (+1)
k=str()            #переменная для записи/додавание результата
c=s[0]             #начало перебора input()
i=0                #счетчик 
for r in s:        #перебор input() по символу
  if c!=r:         #условие
    k=k+c+str(i)   #мат. часть -запись результата в k=str()
    c=r            #присвоение нового символа
    i=0            #обнуление счетчика
  i=i+1            #+1 к счетчику
print(k)           #ВУАЛЯ

# def abcdef defghijk kjihgfedcba ijk abcde kigec

# Попробуйте найти ответ к этой задаче, не используя интерпретатор Python. 
# Если без интерпретатора решить не получается, разберитесь, 
# почему выводятся именно такие строки в каждом из вариантов.

# Итоговый формат ответа должен выглядеть следующим образом:
# abcd efg hijklmnop qrst uvw xy z



#
# s = input()
# l = len(s)
# i = 0
# cnt = 1
# while (i < (l-1)):
#  if s[i] == s[i+1]:
#     cnt+=1
#  else:
#      print(s[i],cnt,sep='',end='')
#      cnt=1
#  i+=1
# print(s[-1],cnt,sep='',end='')



#
# genome = input()
# row = 1
# for i in range(1, len(genome)):
#     if genome[i] == genome[i - 1]:
#         row += 1
#     else:
#         print(genome[i - 1] + str(row), end="")
#         row = 1
# print(genome[-1] + str(row))


#
# s = input()
# i, count = 0,1
# while i < len(s):
#     if i + 1 < len(s) and s[i] == s[i + 1]:
#         count += 1
#     else:
#         print(s[i] + str(count), end='')
#         count = 1
#     i += 1


#
# s = input()
# l=len(s)
# cnt=1
# for i in range(l):
#     if i==(l-1):
#         print(s[i]+str(cnt),end='')
#     else:
#         if s[i]==s[i+1]:
#             cnt=cnt+1
#         else:
#             print(s[i]+str(cnt),end='')
#             cnt=1



#
# s = str(input())
# l = len(s)-1
# c = 1
# t = ''
# if len(s)==1:
#     t = t +s+str(c)
# else:
#     for i in range(0,l):
#         if s[i]==s[i+1]:
#             c +=1
#         elif s[i]!=s[i+1]:
#             t = t + s[i]+str(c)
#             c = 1
#     for j in range(l,l+1):
#         if s[-1]==s[-2]:
#             t = t +s[j]+str(c)
#         elif s[-1]!=s[-2]:
#             t = t +s[j]+str(c)
#             c = 1
# print(t)


#
# s = input() + ' '    #исходный список, закрываем пробелом
# ind = 0   
# for i in range(1, len(s)):    #будем проходится по индексам, начиная с 1
#     if s[i] != s[i-1]:    #находим несовпадение, начинаем работать, иначе проходим дальше
#         print(s[i-1] + str(i - ind), end='')    #записываем предыдущий символ и (текущий индекс минус предыдущий)=кол-во
#         ind = i    #сохраняем текущий индекс для следующей итерации



#
# string = input()

# a = string[0]
# count = 0

# for x in string:
#     if x == a:
#         count += 1
#     else:
#         print(a, count, sep="", end="")
#         a = x
#         count = 1
# print(a, count, sep="")



#
# genom = input()+' '
# k=1
# for i in range(len(genom)-1):
#     s=genom[i]
#     if genom[i] == genom[i+1]:
#         k += 1
#         continue
#     else:
#         print(genom[i],end='')
#         print(k,end='')
#         k = 1





#
# s = input() # принимаем строку
# c = s[0]    # инициализируем символ, с которым будем сравнивать символы строки
# a = 0       # инициализируем счетчик символов, задавая ему значение первого символа строки

# for i in range(0, len(s)):
#     if s[i] == c:             # если символ строки равен тому, с которым сравниваем,
#         a += 1                # увеличиваем счетчик
#     else:
#         print(c, end = '')    # если символ не равен предыдущему, выводим предыдущий символ в консоль без перевода строки
#         print(a, end = '')    # и выводим значение счетчика, тоже без перевода строки
#         a = 1                 # присваиваем счетчику значение 1 (а не 0, потому что текущий символ уже не будет проверяться)
#         c = s[i]              # записываем текущий символ в переменную, с которой будем сравнивать следующий символ
# print(c, end = '')            # в конце цикла отдельно выводим сравниваемый символ и его счетчик
# print(a, end = '')            # это нужно, потому что для последнего символа условие неравенства не выполняется (строка кончилась)
                              # поэтому в цикле он не выводится  


#
# k = 1
# f = s[0]
# for i in range(1, len(s)):
#     if s[i] == f:
#         k += 1
#         z = z[1:]
#     else:
#         n += f + str(k)
#         f = s[i]
#         k = 1
#         z = z[1:]

# print(n + f + str(k))


#
# s = input()
# i = 0
# j = 1
# while s[0:(i+1)] != s:
#   if s[i] != s[(i+1)]:
#     print(s[i], j, sep='', end='')
#     j = 0
#   i += 1
#   j += 1
# print(s[-1], j, sep='', end='')


#
# a = input() + '.'
# count = 1
# for i in range(len(a)-1):
#   if (a[i] != a[i+1]):
#     print(a[i] + str(count), end='')
#     count = 1
#   else: count += 1


#
# s = input()
# strLength = len(s)
# o = ""
# c = 1
# for i in range(strLength):

#     if i < strLength - 1 and s[i] == s[i+1]:
#         c += 1
#     else:
#         o += s[i] + str(c)
#         c = 1
# print(o)


#
# dna = input()
# dnas = ''
# n = 0
# d = dna[0]
# for i in dna:
#     if i == d:
#         n += 1
#     else:
#         dnas += d + str(n)
#         n = 1
#         d = i
# print(dnas + d + str(n))