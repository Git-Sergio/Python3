# В институте биоинформатики по офису передвигается робот.
#  Недавно студенты из группы программистов написали для него программу, 
#  по которой робот, когда заходит в комнату, считает количество программистов 
#  в ней и произносит его вслух: "n программистов".

# Для того, чтобы это звучало правильно, для каждого n нужно использовать
#  верное окончание слова.

# Напишите программу, считывающую с пользовательского ввода целое число 
# n (неотрицательное), выводящее это число в консоль вместе с правильным 
# образом изменённым словом "программист", для того, чтобы робот мог нормально
#  общаться с людьми, например: 1 программист, 2 программиста, 5 программистов.

# В комнате может быть очень много программистов. Проверьте, что ваша 
# программа правильно обработает все случаи, как минимум до 1000 человек.

# Дополнительный комментарий к условию:
# Обратите внимание, что задача не так проста, как кажется на первый взгляд. 
# Если ваше решение не проходит какой-то тест, это значит, что вы не рассмотрели 
# какой-то из случаев входных данных (число программистов 0≤n≤1000). Обязательно 
# проверяйте свои решения на дополнительных значениях, а не только на тех, что 
# приведены в условии задания.

# Так как задание повышенной сложности, вручную код решений проверяться не будет.
#  Если вы столкнулись с ошибкой в первых четырёх тестах, проверьте, что вы 
#  используете только русские символы для ответа. В остальных случаях ищите ошибку 
#  в логике работы программы.



n = int(input())
if n % 10 == 1 and n % 100 != 11: 
    print(n, 'программист')
elif n % 10 >= 2 and n % 10 <= 4 and (n % 100 < 10 or n % 100 > 20):
    print(n, 'программиста')
else:
    print(n, 'программистов')

# В формулу 2 ("программиста") попадают числа, оканчивающиеся 
# на 2, 3, 4, напр., 2, 22, 32.
# Однако если последние две цифры это числа 12-14, то их надо 
# исключить: 12, 112, 212... (это формула 3). Поэтому и берётся 
# остаток от деления на 100.



#
# n=int(input())
# print(n,'программист'+('ов' if n%10==0 or 4<n%10<10 or 10<n%100<15 else 'а' if 1<n%10<5 else ''))




#Prikol
# def n(c):
#   return str(c) + " " + "программист" + ("ов" if (20 >= c%100 >= 5) or (c%10 in [0,5,6,7,8,9]) else ("а" if c%10 in [2,3,4] else ""))
  
# for i in range(1001):
#   print("if c == " + str(i) + ":\n\tprint(\"" + str(n(i)) + "\")")


#
# i=int(input())
# d=i%10
# h=i%100
# if d==1 and h!=11:
#     s=""
# elif 1<d<5 and not 11<h<15:
#     s="а"
# else:
#     s="ов"
# print(i," программист"+s)



#
# n = int(input())
# if (n % 10 == 1 and n%100 != 11):
#     print(n, 'программист')
# elif (n % 10 in [2, 3, 4] and not n % 100 in [12, 13, 14] ):
#     print(n, 'программиста')
# else:
#     print(n, 'программистов')


#
# a = int(input())
# b = 'программист'
# if a%10==1 and not a%100==11:
#     print(a, b)
# elif 1<a%10<5 and not 10<a%100<15:
#     print(a, b + 'а')
# else:
#     print(a, b + 'ов')


#
# dic, n = {'1': '', '2': 'а', '3': 'а', '4': 'а'}, input()
# print(n, 'программист'+(dic.get(n[-1], 'ов') if not 10 < int(n[-2::]) < 20 else 'ов'))
# словарь dic хранит окончания, для 1 - пустое, для 2 - "а" и т.д.
# метод get у словаря возвращает его значение по переданному ключу или 
# значение по умолчанию если переданного ключа в словаре не окажется
# собственно вот и вся логика - мы смотрим последнюю цифру числа, 
# для 1-4 возвращаем окончание из словаря, для остальных пишем по умолчанию "ов",
#  если же последние две цифры числа в промежутке от 10 до 20 - то сразу пишем "ов"


#
# n=int(input())
# ost10=n%10
# ost100=n%100
# if n>=0:
#     s="программист"
#     if 11<=ost100<=14:
#         fin='ов'
#     elif ost10==0 or 5<=ost10<=9:
#         fin='ов'
#     elif ost10==1:
#         fin=''
#     else:
#         fin='а'
#     word=s+fin
#     print(str(n),word)


#
# n = int(input())
# sx = "а" if n % 10 in {2, 3, 4} and n % 100 not in {12, 13, 14} else "" if n % 10 == 1 and n % 100 != 11 else "ов"
# print(n, "программист" + sx)